{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaikw\\\\OneDrive\\\\Desktop\\\\WEBDEV\\\\MERN\\\\Inventory_management\\\\client\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check if user is logged in on app start\n    const token = localStorage.getItem('token');\n    const userData = localStorage.getItem('user');\n    if (token && userData) {\n      setIsAuthenticated(true);\n      setUser(JSON.parse(userData));\n    }\n    setLoading(false);\n  }, []);\n  const login = async (email, password) => {\n    try {\n      // API call to backend server\n      const response = await fetch('http://localhost:5000/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        localStorage.setItem('token', data.token);\n        localStorage.setItem('user', JSON.stringify(data.user));\n        setIsAuthenticated(true);\n        setUser(data.user);\n        return {\n          success: true\n        };\n      } else {\n        return {\n          success: false,\n          error: 'Invalid credentials'\n        };\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      return {\n        success: false,\n        error: 'Network error'\n      };\n    }\n  };\n  const demoLogin = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/auth/demo', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        localStorage.setItem('token', data.token);\n        localStorage.setItem('user', JSON.stringify(data.user));\n        setIsAuthenticated(true);\n        setUser(data.user);\n        return {\n          success: true\n        };\n      } else {\n        return {\n          success: false,\n          error: 'Demo login failed'\n        };\n      }\n    } catch (error) {\n      console.error('Demo login error:', error);\n      return {\n        success: false,\n        error: 'Network error'\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setIsAuthenticated(false);\n    setUser(null);\n  };\n  const value = {\n    isAuthenticated,\n    user,\n    login,\n    demoLogin,\n    logout,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"mKb+zX9grAar2iMVStuBBwt7fpw=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","isAuthenticated","setIsAuthenticated","user","setUser","loading","setLoading","token","localStorage","getItem","userData","JSON","parse","login","email","password","response","fetch","method","headers","body","stringify","ok","data","json","setItem","success","error","console","demoLogin","logout","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/gaikw/OneDrive/Desktop/WEBDEV/MERN/Inventory_management/client/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Check if user is logged in on app start\r\n    const token = localStorage.getItem('token');\r\n    const userData = localStorage.getItem('user');\r\n    \r\n    if (token && userData) {\r\n      setIsAuthenticated(true);\r\n      setUser(JSON.parse(userData));\r\n    }\r\n    \r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      // API call to backend server\r\n      const response = await fetch('http://localhost:5000/api/auth/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        localStorage.setItem('token', data.token);\r\n        localStorage.setItem('user', JSON.stringify(data.user));\r\n        setIsAuthenticated(true);\r\n        setUser(data.user);\r\n        return { success: true };\r\n      } else {\r\n        return { success: false, error: 'Invalid credentials' };\r\n      }\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      return { success: false, error: 'Network error' };\r\n    }\r\n  };\r\n\r\n  const demoLogin = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/auth/demo', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        localStorage.setItem('token', data.token);\r\n        localStorage.setItem('user', JSON.stringify(data.user));\r\n        setIsAuthenticated(true);\r\n        setUser(data.user);\r\n        return { success: true };\r\n      } else {\r\n        return { success: false, error: 'Demo login failed' };\r\n      }\r\n    } catch (error) {\r\n      console.error('Demo login error:', error);\r\n      return { success: false, error: 'Network error' };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    setIsAuthenticated(false);\r\n    setUser(null);\r\n  };\r\n\r\n  const value = {\r\n    isAuthenticated,\r\n    user,\r\n    login,\r\n    demoLogin,\r\n    logout,\r\n    loading\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}